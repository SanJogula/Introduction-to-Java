import java.util.Arrays;
import java.util.HashMap;

public class Main {
    public static void main(String[] args) {
        //int A[] = {13,15,13,2,9,3,10,10,20,13};
        //System.out.print(solve(A));
        int A[] = {6,7,10,3,10,10,3,10};
        int B[] = {1,1,6,6,7,7,6,4,9};
        // ANS  = [0,0,1,1,1,1,1,0,0]
        //[49454,1342,7995,3019,73682,57941,20339,88364,68267,86959,81352,16098,82768,9342,73070,80521,98254,41734,78441,43279,86147,74208,98932,71766,59363,7961,76411,32437,64343,18480,3168,59448,35129,33371,89145,41596,21082,84611,17744,48372,83997,71331,30434,47399,38233,31725,33249,92815,84186,27781,1426,16027,16608,31492,72496,27182,86494,14806,40807,62302,4316,74716,83257,14037,24054,92011,26525,92980,26300,63020,37211,91115,49776,14618,42193,61666,94922,99303,77809,29780,50711,23895,63041,39918,85430,43330,95001,63124,21178,4886,66984,56253,37035,54740,99696,78610,73284,90447,18342,6739,41750,79696,11123,17330,14756,52180,69173,70165,72902,42124,73310,47448,78694,1243,77876,31913,45317,4412,21424,73803,44695,15130,54751,40627,75203,81046,65636,96814,10372,24549,15380,14745,32554,27055,83064,52007,30458,6641,59695,39039,88874,84860,73897,46140,97606,27316,21261,11979,40206,17585,95796,40368,25237,40865,30443,67201,84355,56452,26453,63305,97716,69039,89127,77415,58360,88586,6955,40397,81649,60914,18973,70401,52919,9239,43857,72095,69143,11615,31627,7764,1072,35202,13253,99141,13045,91307,30380,51206,68686,85117,7492,55588,24502,65388,17536,87068,33246,94016,69674,91841,98153,29558,193,74426,91374,92830,21078,33985,98106,76030,96078,21669,98315,2957,21347,12521,79286,15577,69443,34563,91681,52034,77711,2974,24233,4668,87421,1560,29374,23249,17303,74372,88098,13213,55706,11434,28750,97648,38040,62850,18381,77200,90102,57341,36927,72948,35535,85916,1112,71498,74735,65590,41214,89521,49368,31191,2126,92672,85441,13915,33975,96446,6193,38455,11421,44903,58985,44209,2200,96014,29400,77315,23218,24789,13892,38844,99501,25142,57576,6974,28987,41694,32720,16769,86596,28428,9982,25743,6243,3927,18921,57350,59689,46117,41977,47353,10201,26965,8300,5135,34826,77750,57780,36035,86825,52717,15511,55586,52276,3187,12462,92848,45343,35957,46758,73827,46035,41299,99394,85510,52522,47681,47574,46776,72565,10280,2190,36331,51830,5254,43493,90757,59142,50442,26958,65954,61456,24665,12943,39407,20372,35980,86593,16113,10469,96463,10258,1021,79692,87428,44898,13053,80290,67934,1033,98321,53146,63111,71024,7403,48469,51546,23635,52082,89515,18569,92998,25632,15017,81432,52333,6596,20397,42976,54786,99937,38668,83597,85874,65677,23565,3937,8896,77747,9932,34095,48609,16305,65368,28576,799,99579,45684,70513,62231,3798,24186,58707,28186,91262,13107,96394,87407,71936,50336,48815,57839,11776,73141,92046,52808,43829,20472,47369,59259,60072,73734,24850,30783,53657,9839,39541,40571,52154,69013,70316,82671,20882,80913,80233,19788,22907,63310,93872,34391,17828,83308,30713,97707,60911,16126,72626,95796,41844,7340,57020,77972,7645,81746,10794,47169,22056,67679,41861,41733,23976,11031,65162,80381,17316,42418,45033,10267,71799,1339,64232,17316,36622,63601,7487,49747,22861,41289,59258,43956,76042,41546,92122,42922,95280,87151,99828,28745,8222,30249,2352,95996,91654,79483,19499,80640,24814,11964,49494,79495,95986,51480,61140,38551,88480,25648,59040,21321,80666,39861,86149,96746,37912,63153,28356,78780,64707,27838,98129,5878,55611,68428,37942,256,35635,59136,90767,97017,70511,74159,70765,24369,50925,91463,73331,367,29049,98887,59516,49387,37879,95682,40211,40437,51901,17377,25913,99789,85654,63101,52642,71016,54304,21609,9528,78578,56623,44710,37175,20870,73736,71116,47,87832,79911,12040,99622,58540,45881,61016,38323,61467,72994,60721,91172,3605,4217,18650,29721,32346,31175,62414,25734,4640,66124,52318,82261,53041,68986,54573,86466,19593,47416,71442,87293,60316,84096,72153,34956,92622,40641,55618,50790,58585,77277,81665,48249,3403,14732,96956,38532,48261,1240,96656,3198,57341,5695,30957,62189,74876,82260,96693,47952,67393,8959,14721,45078,95997,30264,85244,30757,2709,60335,59526,78196,86147,24231,44306,63152,89621,66807,62760,33979,79693,35016,15620,27048,77183,48858,68597,2017,37942,57054,46719,38241,39279,87965,91225,73146,90524,33616,25552,24945,52226,79589,38498,35229,44795,88993,62628,91563,60629,61145,58941,54877,32626,60055,17800,66726,44422,76219,37718,45232,70844,65271,43082,63734,47441,43250,86075,61098,67479,6438,56501,96144,83124,92867,64792,88065,10688,63274,53528,67690,50219,20562,25403,38250,21204,84262,27038,81687,50419,79908,27793,54234,34032,27968,10390,32238,12073,53855,2534,35301,51696,10941,87916,75811,78219,67911,39111,31489,90323,33058,99341,97035,28725,79298,56611,46114,6644,99443,86821,74555,36357,276,28516,92383,52657,53751,82979,5673,84982,14787,69050,61675,34055,30706,32691,24105,50216,75475,37168,44476,46578,85513,21155,58448,90357,71242,48147,39686,37489,20800,3902,65139,54908,94348,90737,62047,58975,27934,18930,25255,24665,49470,98327,33180,18234,38183,18540,56290,69929,84838,30225,51154,96159,52959,34234,59384,74794,14984,27853,33269,18699,88109,89959,40670,28888,7594,58392,92795,90299,85844,6914,96969,43088,68369,27390,51865,36107,72826,67831,98670,7952,95904,55212,98627,39897,91493,23698,2499,9844,8191,70001,19055,92258,53912,53922,11932,40026,91632,14231,19250,23363,82201,60819,86574,76509,92858,45358,22912,59577,10414,66866,11278,27804,20610,79553,26512,43649,39450,90028,68402,37844,47724,98525,48117,5783,51139,77902,66253,32544,52829,80624,3940,9081,72462,77350,2006,22879,35291,42663,91763,4548,42208,91967,99681,28078,4939,86734,97399,76085,93822,12359,33795,86760,88944,53459,14469,31433,80813,54444,8434,10509,13586,46690,89554,81053,48466,33017,91297,30551,78579,44809,68498,31341,43794,58429,75975,55909,21755,87701,4699,25751,65809,24324,14040,15987,66860,53650,31649,97720,82038,77658,42730,24862,48557,49709,53466,54157,35941,68686,22224,31427,23235,76405,4603,78995,63618,96012,2977,18400,44114,10676,81817,85670,92308,94465,93105,86962,96959,17338,86600,64677,97887,93242,88725,45012,98192,47730,18302,30699,89959,61508,33250,13669,57034,42281,79600,34006,66387,36589,45677,14530,63952,65998,90067,48579,41254,66048,11212,40806,65226,62379,26171,78446,36390,23339,17139,56496,62714,18480,58718,1910,10329,18844,39191,79357,9928,6184,60720,61718,71234,86878,2125,18120,44662,65472,87655,46604,52903,43072,71467,20080,74443,84582,14712,35573,4205,82830,25509,58577,844,71911,25112,12814,41305,27189,60879,61321,41917,89935,14587,29588,76688,26017,56289,95092,86755,1324,23191,90083,35800,94625,78797,75663,86308,51242,2689,9145,52948,15073,6377,71288,69956,28631,95886,15411,69097,99918,80619,55755,81257,66783,61298,42830,99870,90678,4295,97317,215,64689,12707,40807,15543,54212,10962,19555,17524,94679,85525,13563,63993,73670,16129,53507,13380,2113,12191,3206,8649,65610,37194,52193,37933,53081,17780,85734,33515,1467,32353,3579,88755,84207,99593,67001,68262,72808,72155,67213,37788,72206,25973,66681,57310,6524,97709,70612,59659,81923,14411,89062,55287,54246,86124,49582,76552,52220,98849,23580,4728,59474,92238,50390,58582,38374,747,88663,25252,7309,76934,95404,52730,34445,81119,68853,8642,76996,55755,37770,76826,88831,23890,16403,37781,3428,13105,59311,36346,70985,91289,22670,17347,12474,58894,9911,59072,63799,97928,23011,55314,22451,15093,98560,66672,70646,63989,45135,57317,15580,66397,48581,23760,57173,49077,88366,78018,65059,52986,19302,61444,20446,2429,3006,16686,45715,49089,829,40945,23969,85569,98940,12014,28507,22824,20873,2685,57065,71191,59781,18631,31686,85570,38854,33292,80963,58259,40150,89694,70275,61670,52529,99588,28861,96715,16075,98872,90910,67048,93384,43594,44068,13044,95522,61498,10307,56573,65671,23105,82884,50115,14489,46729,28897,10106,89644,93521,8491,79564,68491,68170,70244,71893,68339,33276,57381,53669,99893,29186,31129,32642,58553,21737,35616,4419,96662,85782,97966,44822,68027,26269,99081,10971,65802,9482,87214,30022,90007,43676,60524,87809,76269,53701,77927,12103,8041,98027,59351,93739,78621,86698,3654,45615,20974,42672,20406,3085,83575,34112,86521,68082,9572,26448,15895,46078,75288,69418,76491,98597,41607,48335,42950,47281,55804,92847,34891,53789,62549,4370,95953,2523,29026,60146,23461,43408,1993,75423,88325,6323,1413,54330,30373,28177,70370,86042,94318,11564,47427,49610,24026,89463,63005,41608,77210,72027,15577,49064,23664,45814,8822,61872,29237,34807,11236,47897,7188,11555,60618,66164,86221,20659,33152,50371,11635,340,14902,77467,74862,80933,92172,59529,88602,60540,14744,68170,85575,67074,91971,58513,80183,98866,3788,93637,89442,79518,47171,30496,92533,53738,5967,18385,38766,1231,90889,64763,6274,84441,25727,55700,25464,80586,43282,16007,96780,79285,2232,4274,70285,45283,12794,23945,13086,57681,49399,64433,52824,76688,98272,99781,68359,72772,2074,27733,25897,65062,39519,50402,6835,7298,74973,50500,76395,52922,94485,388,398,38881,58589,28578,54316,42016,93183,3696,40423,99220,94424,4724,88504,21102,19097,67690,42794,94802,5386,47200,4701,58328,90402,26489,85828,54511,45072,46443,27431,37493,92053,16832,85922,41632,64616,97689,29220,33816,4560,31334,61041,66426,34574,29423,41633,43799,34192,38158,57343,31698,63583,71379,65034,15494,53490,80639,46903,42974,26808,361,64717,76571,98067,17788,76295,79698,71447,85303,48534,7979,21839,51851,35421,83107,46681,98721,89779,77419,63397,42482,50724,87750,31641,40653,45648,39503,81584,2996,22187,18449,89462,62111,84092,19629,10094,90199,39038,67352,90189,27260,81377,66746,51644,57472,94025,10480,82137,53546,58574,89642,19830,46132,88987,87950,50713,61710,13136,17331,94171,84088,60192,53287,82953,42219,93683,62090,67878,1457,71941,12560,90439,20105,13733,60707,23477,64196,92919,23423,36911,4843,97235,72405,6757,27446,9956,84200,46302,1398,23529,74962,21203,49964,99831,31232,65906,30831,79477,68242,30939,63243,27710,12444,83238,56989,75107,36168,13852,37112,23687,99026,66586,69346,48193,99850,13905,92887,21277,96374,47336,28677,10619,48429,8344,69423,73359,63037,10159,22571,70399,5733,81006,72260,68936,86812,23851,16312,65018,10249,6960,3514,81271,26408,99802,74225,35384,91147,60602,15384,28008,91575,55896,25820,21159,36963,37579,12321,44552,75676,78082,60701,6803,86532,57374,36732,75076,6382,75317,23386,63498,24388,73329,37324,36937,44514,87407,65751,4088,69304,45121,78583,47908,95787,52172,33818,50539,43540,60907,57987,86978,25439,24714,33543,78992,12302,34283]
        solve(A,B);

    }

    /*
    public static void solve(int[] A, int[] B) {
        HashMap<Integer, Integer> hm = new HashMap<>();
        for(int i=0; i<B.length; i++) {
            System.out.print("B " + B[i] + ",");
            if (hm.containsKey(B[i]) == false){
                for (int j = 0; j < A.length; j++) {
                    System.out.println("A " + A[j] + ",");
                    if (B[i] == A[j]) {
                        if (hm.containsKey(B[i]) == false) {
                            hm.put(B[i], 1);
                        } else {
                            int currentValue = hm.get(B[i]);
                            hm.put(B[i], currentValue + 1);
                        }
                    } else {
                        if (hm.containsKey(B[i]) == false) {
                            hm.put(B[i], 0);
                        }
                    }
                }
            }
            System.out.println();
        }
        System.out.println();
        int sol[] = new int[B.length];
        for(int i=0; i<B.length; i++){
            System.out.print(hm.get(B[i])+" ");
            sol[i] = hm.get(B[i]);
        }
    }
     */
    public static int solve(int[] A) {
        int count = 0;
        HashMap<Integer, Integer> hm = new HashMap<>();
        for(int i=0; i<A.length; i++){
            if(hm.containsKey(A[i])==false){
                hm.put(A[i],1);
            }
            else{
                int currentValue = hm.get(A[i]);
                hm.put(A[i],currentValue+1);
            }
        }
        for(Integer i:hm.keySet()){
            if(hm.get(i)==1){
                count++;
            }
        }
        return count;
    }

    public static void solve(int[] A, int[] B) {
        HashMap<Integer,Integer> hs=new HashMap<>();
        //declaring new array which we have to return
        int[] ans = new int[B.length];
        int freqency=0;
        //checking frequency
        for(int i=0;i<A.length;i++){
            if(hs.containsKey(A[i])){
                freqency=hs.get(A[i]);
                hs.put(A[i],freqency+1);
            }
            else
            {
                hs.put(A[i],1);
            }
        }
        //creating B[i] array
        for(int i=0;i<B.length;i++){
            System.out.print(B[i]+" ");
            if(hs.containsKey(B[i])){
                ans[i]=hs.get(B[i]);
                System.out.print(hs.get(B[i])+" ");
            }
            System.out.println();
        }
        for(int i=0; i<ans.length; i++){
            System.out.print(ans[i]+" ");
        }
    }
}